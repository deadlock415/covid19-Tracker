{"ast":null,"code":"var _jsxFileName = \"/Users/amanshukla/Desktop/Covid19React/covid19-tracker/src/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  }\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    let chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      const chartData = buildChartData(data, 'cases');\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"wpgUsBY956btMcg33+x8PhIaewY=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/amanshukla/Desktop/Covid19React/covid19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","options","legend","display","elements","point","radius","LineGraph","data","setData","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","datasets","backgroundColor","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,OAAO,GAAE;AACXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADG;AAITC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AADC;AAJD,CAAf;;AAUA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMY,cAAc,GAAG,CAACF,IAAD,EAAOG,SAAS,GAAG,OAAnB,KAA+B;AAClD,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,aAAJ;;AACA,SAAK,IAAIC,IAAT,IAAiBN,IAAI,CAACO,KAAtB,EAA6B;AAC3B,UAAIF,aAAJ,EAAmB;AACjB,YAAIG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEH,IADc;AAEjBI,UAAAA,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFV,SAAnB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACD;;AACDH,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACD;;AACD,WAAOF,SAAP;AACD,GAdH;;AAgBAb,EAAAA,SAAS,CAAC,MAAI;AACVqB,IAAAA,KAAK,CAAC,4DAAD,CAAL,CAAoEC,IAApE,CAAyEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAArF,EAAsGF,IAAtG,CAA4Gb,IAAD,IAAS;AAChH,YAAMI,SAAS,GAAEF,cAAc,CAACF,IAAD,EAAM,OAAN,CAA/B;AACAC,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KAHD;AAIH,GALQ,EAKP,EALO,CAAT;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AACA,MAAA,OAAO,EAAGX,OADV;AAEA,MAAA,IAAI,EAAG;AACHuB,QAAAA,QAAQ,EAAC,CAAC;AACNC,UAAAA,eAAe,EAAE,wBADX;AAENC,UAAAA,WAAW,EAAE,SAFP;AAGNlB,UAAAA,IAAI,EAACA;AAHC,SAAD;AADN;AAFP;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAvCQD,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React , {useState, useEffect} from 'react'\nimport {Line} from 'react-chartjs-2';\n\nconst options ={\n    legend: {\n        display: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n      }\n}\nfunction LineGraph() {\n    const [data,setData] = useState({}) \n    const buildChartData = (data, casesType = \"cases\") => {\n        let chartData = [];\n        let lastDataPoint;\n        for (let date in data.cases) {\n          if (lastDataPoint) {\n            let newDataPoint = {\n              x: date,\n              y: data[casesType][date] - lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n          }\n          lastDataPoint = data[casesType][date];\n        }\n        return chartData;\n      };\n\n    useEffect(()=>{\n        fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then((data) =>{\n            const chartData =buildChartData(data,'cases')\n            setData(chartData)\n        })\n    },[])\n\n\n    return (\n        <div>\n            <h1>I am a graph</h1>\n            <Line \n            options ={options}\n            data ={{\n                datasets:[{\n                    backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                    borderColor: \"#CC1034\",\n                    data:data}]\n            }} />\n        </div>\n    )\n}\n\nexport default LineGraph\n\n"]},"metadata":{},"sourceType":"module"}