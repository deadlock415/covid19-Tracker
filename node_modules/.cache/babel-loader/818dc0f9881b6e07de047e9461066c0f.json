{"ast":null,"code":"import _toConsumableArray from\"C:/Users/ARPIT/Desktop/React Js/Covid-19-Dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{Circle,Popup}from\"react-leaflet\";import React from\"react\";import numeral from\"numeral\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var casesTypeColors={cases:{hex:\"#CC1034\",multiplier:800},recovered:{hex:\"#7dd71d\",multiplier:1200},deaths:{hex:\"#fb4443\",multiplier:2000}};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};export var sortData=function sortData(data){var sortData=_toConsumableArray(data);sortData.sort(function(a,b){if(a.cases>b.cases){return-1;}else{return 1;}});return sortData;};//Draw circle on the map with interactive tooltop\nexport var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cases';return data.map(function(country){return/*#__PURE__*/_jsx(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],fileOpacity:0.4,color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"info-name\",children:country.country}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-confirmed\",children:[\"Cases:\",numeral(country.cases).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-recovered\",children:[\"Recovered:\",numeral(country.recovered).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-deaths\",children:[\"Deaths:\",numeral(country.deaths).format(\"0,0\")]})]})})});});};","map":{"version":3,"sources":["C:/Users/ARPIT/Desktop/React Js/Covid-19-Dashboard/src/util.js"],"names":["Circle","Popup","React","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","prettyPrintStat","stat","format","sortData","data","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"iLAAA,OAAQA,MAAR,CAAgBC,KAAhB,KAA4B,eAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,C,wFAGA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,CACLC,GAAG,CAAE,SADA,CAELC,UAAU,CAAE,GAFP,CADa,CAKpBC,SAAS,CAAE,CACTF,GAAG,CAAE,SADI,CAETC,UAAU,CAAE,IAFH,CALS,CASpBE,MAAM,CAAE,CACNH,GAAG,CAAE,SADC,CAENC,UAAU,CAAE,IAFN,CATY,CAAxB,CAeE,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QACjCA,CAAAA,IAAI,YAAOR,OAAO,CAACQ,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAAP,EAAwC,IADX,EAAxB,CAIT,MAAO,IAAMC,CAAAA,QAAQ,CAAG,kBAACC,IAAD,CAAS,CAC7B,GAAMD,CAAAA,QAAQ,oBAAOC,IAAP,CAAd,CAEAD,QAAQ,CAACE,IAAT,CAAc,SAACC,CAAD,CAAGC,CAAH,CAAO,CACjB,GAAGD,CAAC,CAACX,KAAF,CAAUY,CAAC,CAACZ,KAAf,CAAqB,CACjB,MAAO,CAAC,CAAR,CAEH,CAHD,IAGK,CACD,MAAO,EAAP,CACH,CACJ,CAPD,EAQA,MAAOQ,CAAAA,QAAP,CACH,CAZM,CAaP;AACA,MAAO,IAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACJ,IAAD,KAAMK,CAAAA,SAAN,2DAAkB,OAAlB,OACzBL,CAAAA,IAAI,CAACM,GAAL,CAAS,SAAAC,OAAO,qBACZ,KAAC,MAAD,EACA,MAAM,CAAI,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV,CAEA,WAAW,CAAI,GAFf,CAGA,KAAK,CAAEpB,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GAHlC,CAIA,SAAS,CAAEF,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GAJtC,CAKA,MAAM,CACFmB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgCf,eAAe,CAACe,SAAD,CAAf,CAA2BZ,UAN/D,uBASA,KAAC,KAAD,wBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,YAAK,SAAS,CAAC,WAAf,CACA,KAAK,CAAE,CAACoB,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAhB,CADP,EADJ,cAII,YAAK,SAAS,CAAG,WAAjB,UAEEP,OAAO,CAACA,OAFV,EAJJ,cAOI,aAAK,SAAS,CAAG,gBAAjB,oBAAyClB,OAAO,CAACkB,OAAO,CAAChB,KAAT,CAAP,CAAuBO,MAAvB,CAA8B,KAA9B,CAAzC,GAPJ,cAQI,aAAK,SAAS,CAAG,gBAAjB,wBAA6CT,OAAO,CAACkB,OAAO,CAACb,SAAT,CAAP,CAA2BI,MAA3B,CAAkC,KAAlC,CAA7C,GARJ,cASI,aAAK,SAAS,CAAG,aAAjB,qBAAuCT,OAAO,CAACkB,OAAO,CAACZ,MAAT,CAAP,CAAwBG,MAAxB,CAA+B,KAA/B,CAAvC,GATJ,GADJ,EATA,EADY,EAAhB,CADyB,EAAtB","sourcesContent":["import {Circle, Popup} from \"react-leaflet\";\r\nimport React from \"react\"\r\nimport numeral from \"numeral\";\r\n\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n      multiplier: 800,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n      multiplier: 1200,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n      multiplier: 2000,\r\n    },\r\n  };\r\n\r\n  export const prettyPrintStat = (stat) =>\r\nstat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n\r\nexport const sortData = (data) =>{\r\n    const sortData = [...data];\r\n\r\n    sortData.sort((a,b)=>{\r\n        if(a.cases > b.cases){\r\n            return -1;\r\n\r\n        }else{\r\n            return 1;\r\n        }\r\n    })\r\n    return sortData;\r\n}\r\n//Draw circle on the map with interactive tooltop\r\nexport const showDataOnMap = (data,casesType = 'cases') =>(\r\n    data.map(country =>(\r\n        <Circle \r\n        center = {[country.countryInfo.lat, country.countryInfo.long]}\r\n        fileOpacity = {0.4}\r\n        color={casesTypeColors[casesType].hex}\r\n        fillColor={casesTypeColors[casesType].hex}\r\n        radius={\r\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n          }\r\n        >\r\n        <Popup>\r\n            <div className=\"info-container\">\r\n                <div className=\"info-flag\"\r\n                style={{backgroundImage: `url(${country.countryInfo.flag})`}}\r\n                 />\r\n                <div className = \"info-name\"\r\n                \r\n                >{country.country}</div>\r\n                <div className = \"info-confirmed\">Cases:{numeral(country.cases).format(\"0,0\")}</div>\r\n                <div className = \"info-recovered\">Recovered:{numeral(country.recovered).format(\"0,0\")}</div>\r\n                <div className = \"info-deaths\">Deaths:{numeral(country.deaths).format(\"0,0\")}</div>\r\n            </div>\r\n        </Popup>\r\n        </Circle>\r\n    ))\r\n)"]},"metadata":{},"sourceType":"module"}