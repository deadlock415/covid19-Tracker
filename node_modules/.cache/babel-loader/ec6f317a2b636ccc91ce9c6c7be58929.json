{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARPIT\\\\Desktop\\\\React Js\\\\Covid-19-Dashboard\\\\src\\\\util.js\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 2000\n  }\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const sortData = data => {\n  const sortData = [...data];\n  sortData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortData;\n}; //Draw circle on the map with interactive tooltop\n\nexport const showDataOnMap = (data, casesType = 'cases') => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fileOpacity: 0.4,\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-flag\",\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-name\",\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-confirmed\",\n        children: [\"Cases:\", numeral(country.cases).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-recovered\",\n        children: [\"Recovered:\", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-deaths\",\n        children: [\"Deaths:\", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 9\n}, this));","map":{"version":3,"sources":["C:/Users/ARPIT/Desktop/React Js/Covid-19-Dashboard/src/util.js"],"names":["Circle","Popup","React","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","prettyPrintStat","stat","format","sortData","data","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import {Circle, Popup} from \"react-leaflet\";\r\nimport React from \"react\"\r\nimport numeral from \"numeral\";\r\n\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n      multiplier: 800,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n      multiplier: 1200,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n      multiplier: 2000,\r\n    },\r\n  };\r\n\r\n  export const prettyPrintStat = (stat) =>\r\nstat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n\r\nexport const sortData = (data) =>{\r\n    const sortData = [...data];\r\n\r\n    sortData.sort((a,b)=>{\r\n        if(a.cases > b.cases){\r\n            return -1;\r\n\r\n        }else{\r\n            return 1;\r\n        }\r\n    })\r\n    return sortData;\r\n}\r\n//Draw circle on the map with interactive tooltop\r\nexport const showDataOnMap = (data,casesType = 'cases') =>(\r\n    data.map(country =>(\r\n        <Circle \r\n        center = {[country.countryInfo.lat, country.countryInfo.long]}\r\n        fileOpacity = {0.4}\r\n        color={casesTypeColors[casesType].hex}\r\n        fillColor={casesTypeColors[casesType].hex}\r\n        radius={\r\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n          }\r\n        >\r\n        <Popup>\r\n            <div className=\"info-container\">\r\n                <div className=\"info-flag\"\r\n                style={{backgroundImage: `url(${country.countryInfo.flag})`}}\r\n                 />\r\n                <div className = \"info-name\"\r\n                \r\n                >{country.country}</div>\r\n                <div className = \"info-confirmed\">Cases:{numeral(country.cases).format(\"0,0\")}</div>\r\n                <div className = \"info-recovered\">Recovered:{numeral(country.recovered).format(\"0,0\")}</div>\r\n                <div className = \"info-deaths\">Deaths:{numeral(country.deaths).format(\"0,0\")}</div>\r\n            </div>\r\n        </Popup>\r\n        </Circle>\r\n    ))\r\n)"]},"metadata":{},"sourceType":"module"}